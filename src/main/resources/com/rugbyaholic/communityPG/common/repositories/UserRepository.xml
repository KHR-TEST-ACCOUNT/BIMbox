<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rugbyaholic.communityPG.common.repositories.UserRepository">

	<delete id="depriveAuthority">
	<![CDATA[
		DELETE FROM USER_ROLES WHERE USER_ID = #{user.id} AND ROLE = #{role}
	]]>
	</delete>
	
	<insert id="registerUser" useGeneratedKeys="true" keyProperty="user.id">
	<![CDATA[
		INSERT INTO USERS (
		    EMAIL,
		    AVF,
		    NAME,
		    PASSWORD,
		    LOCKED,
		    EXPIRED,
		    EMP_NO,
		    DEPT_CD,
		    POS_CD,
		    PROFILE_IMG
		) VALUES (
		    #{email},
		    #{avf},
		    #{username},
		    #{password},
		    0,
		    0,
		    #{empNo},
		    #{deptCd},
		    #{posCd},
		    #{imageFile.encodedString}
		) ON DUPLICATE KEY UPDATE 
		    NAME         =  #{username},
		    DEPT_CD      =  #{deptCd},
		    POS_CD       =  #{posCd},
		    PROFILE_IMG  =  #{imageFile.encodedString}
	]]>
	</insert>

	<insert id="registerUserHobbys" parameterType="com.rugbyaholic.communityPG.auth.account.ProfileEditForm">
	<![CDATA[
		INSERT INTO USER_HOBBYS (
		    USER_ID,
		    EMP_NO,
		    HOBBY
		) VALUES (
		    #{userId},
		    #{empNo},
		    #{hobby}
		) ON DUPLICATE KEY UPDATE 
		    USER_ID       =  #{userId},
		    EMP_NO        =  #{empNo},
		    HOBBY         =  #{hobby}
	]]>
	</insert>

	<select id="getSuggestUsers" resultMap="userPersonalInfo">
	<![CDATA[
		SELECT  HOBBY.USER_ID 	as userId,
			    U.NAME			as name,
			    U.PROFILE_IMG	as profileImage
		FROM    USER_HOBBYS HOBBY
		LEFT JOIN USERS U
		ON      U.ID         =  HOBBY.USER_ID
		AND     EXISTS 
		        ( 
 		            SELECT  NAME 
 		            FROM    USERS 
 		            WHERE   AVF     <=  CURDATE() 
 		        ) 
		WHERE   HOBBY      =  #{hobby}
		AND		U.ID	  !=  #{id}
	]]>
	</select>
		
	<select id="findUserHobbys" parameterType="java.lang.Long" resultType="String">
	<![CDATA[
		SELECT  HOBBY
		FROM    USER_HOBBYS
		WHERE   USER_ID      =  #{userId}
	]]>
	</select>
		
	<select id="findUserById" parameterType="java.lang.Long" resultMap="userDetails">
	<![CDATA[
		SELECT 	USERS.ID,
				USERS.EMAIL,
				USERS.AVF,
				USERS.NAME,
				USERS.PASSWORD,
				USERS.LOCKED,
				USERS.EXPIRED,
				USER_ROLES.ROLE,
				CODEMST.CODE_NM,
				USERS.EMP_NO,
        		USERS.PROFILE_IMG,
        		USERS.DEPT_CD,
        		USERS.POS_CD,
        		DP.DEPT_NM,
        		POS.POS_NM
		FROM  	USERS
		LEFT OUTER JOIN USER_ROLES
		ON     USER_ROLES.USER_ID = USERS.ID
		LEFT OUTER JOIN CODEMST
		ON     CODEMST.CODE_ID   = 1
		AND    CODEMST.CODE      = USER_ROLES.ROLE
		INNER JOIN DEPTS DP
		ON      DP.DEPT_CD        = USERS.DEPT_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    DEPTS
		            WHERE   DEPTS.DEPT_CD    =  DP.DEPT_CD
		            AND     DEPTS.AVF       <=  CURDATE()
		            AND     DEPTS.AVF        >  DP.AVF
		        )
		INNER JOIN POSITIONS POS
		ON      POS.POS_CD        = USERS.POS_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    POSITIONS
		            WHERE   POSITIONS.POS_CD     =  POS.POS_CD
		            AND     POSITIONS.AVF       <=  CURDATE()
		            AND     POSITIONS.AVF        >  POS.AVF
		        )
		WHERE  USERS.ID           = #{id}
	]]>
	</select>

	<select id="countUser" parameterType="com.rugbyaholic.communityPG.manage.users.UserSearchForm"
			resultType="int">
	<![CDATA[
		SELECT  COUNT(*)
		FROM    USERS U
		INNER JOIN DEPTS DP
		ON      DP.DEPT_CD       =  U.DEPT_CD
		AND     DP.AVF          <=  CURDATE()
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    DEPTS
		            WHERE   DEPT_CD      =  DP.DEPT_CD
		            AND     AVF         <=  CURDATE()
		            AND     AVF          >  DP.AVF
		        )
		INNER JOIN POSITIONS POS
		ON      POS.POS_CD       =  U.POS_CD
		AND     POS.AVF         <=  CURDATE()
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    POSITIONS
		            WHERE   POS_CD       =  POS.POS_CD
		            AND     AVF         <=  CURDATE()
		            AND     AVF          >  POS.AVF
		        )	
	]]>
	<where>
		<if test="empNo != null">
		<![CDATA[
			AND    U.EMP_NO		LIKE	CONCAT('%', #{empNo}, '%')
		]]>
		</if>
		<if test="name != null">
		<![CDATA[
			AND    U.NAME		LIKE	CONCAT('%', #{name}, '%')
		]]>
		</if>
		<if test="deptCd != null">
		<![CDATA[
			AND    U.DEPT_CD    =  #{deptCd}
		]]>
		</if>
		<if test="posCd != null">
		<![CDATA[
			AND    U.POS_CD     =  #{posCd}
		]]>
		</if>
	</where>
	</select>
	
	<select id="findUserEmail" parameterType="String" resultType="int">
	<![CDATA[
		SELECT  COUNT(*) 
		FROM    USERS
		WHERE   EMAIL      =  #{mail}
	]]>
	</select>
	
	<select id="findAdminUser" resultType="int">
	<![CDATA[
		SELECT  COUNT(*)
		FROM    USERS U
		INNER JOIN USER_ROLES
		ON      USER_ROLES.USER_ID       =  U.ID
		WHERE	USER_ROLES.ROLE			 =	03
	]]>
	</select>
	
	<select id="newProfileEditForm" parameterType="java.lang.Long" resultMap="userPersonalInfo">
	<![CDATA[
		SELECT	USERS.ID			          AS userId,
				USERS.NAME					  AS name,
				USERS.EMAIL					  AS email,
				USERS.EMP_NO				  AS empNo,
				USERS.PROFILE_IMG			  AS profileImage,
				DP.DEPT_NM					  AS deptName,
				POS.POS_NM					  AS posName
		FROM    USERS 
		INNER JOIN DEPTS DP
		ON      DP.DEPT_CD        = USERS.DEPT_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    DEPTS
		            WHERE   DEPTS.DEPT_CD    =  DP.DEPT_CD
		            AND     DEPTS.AVF       <=  CURDATE()
		            AND     DEPTS.AVF        >  DP.AVF
		        )
		INNER JOIN POSITIONS POS
		ON      POS.POS_CD        = USERS.POS_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    POSITIONS
		            WHERE   POSITIONS.POS_CD     =  POS.POS_CD
		            AND     POSITIONS.AVF       <=  CURDATE()
		            AND     POSITIONS.AVF        >  POS.AVF
		        )
		WHERE   ID      = #{userId}
	]]>
	</select>


	<select id="createProfileEditForm" parameterType="java.lang.Long" resultMap="userPersonalInfo">
	<![CDATA[
		SELECT	U.ID						  AS userId,
				U.NAME						  AS name,
				U.EMAIL						  AS email,
				U.EMP_NO					  AS empNo,
				U.PROFILE_IMG				  AS profileImage,
				DP.DEPT_NM					  AS deptName,
				POS.POS_NM					  AS posName,
				PI.ABOUT_ME      			  AS aboutMe,
				PI.ZIPCODE  			      AS zipcode,
		        PI.PREF           			  AS pref,
		        PI.CITY      			      AS city,
		        PI.BLDG      			      AS bldg,
		        PI.TELNO        			  AS phoneNo,
		        PI.MOBILE_NO  			      AS mobilePhoneNo
		FROM    USERS U
		LEFT JOIN DEPTS DP
		ON      DP.DEPT_CD        = U.DEPT_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    DEPTS
		            WHERE   DEPTS.DEPT_CD    =  DP.DEPT_CD
		            AND     DEPTS.AVF       <=  CURDATE()
		            AND     DEPTS.AVF        >  DP.AVF
		        )
		LEFT JOIN POSITIONS POS
		ON      POS.POS_CD        = U.POS_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    POSITIONS
		            WHERE   POSITIONS.POS_CD     =  POS.POS_CD
		            AND     POSITIONS.AVF       <=  CURDATE()
		            AND     POSITIONS.AVF        >  POS.AVF
		        )
		LEFT JOIN PERSONAL_INFO PI
		ON      PI.USER_ID   =	 U.ID
		WHERE   ID      	 =	 #{userId}
	]]>
	</select>
	
	<resultMap type="com.rugbyaholic.communityPG.auth.account.ProfileEditForm" id="userPersonalInfo">
		<result property="userId" column="userId" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="empNo" column="empNo" />
		<result property="deptName" column="deptName" />
		<result property="posName" column="posName" />
		<result property="aboutMe" column="aboutMe" />
		<result property="zipcode" column="zipcode" />
		<result property="pref" column="pref" />
		<result property="city" column="city" />
		<result property="bldg" column="bldg" />
		<result property="phoneNo" column="phoneNo" />
		<result property="mobilePhoneNo" column="mobilePhoneNo" />
		<association property="profileImage" javaType="com.rugbyaholic.communityPG.common.ImageFile">
			<result property="encodedString" column="profileImage" />
		</association>
	</resultMap>
	
	<select id="identifyUser" parameterType="java.lang.String" resultMap="userDetails">
	<![CDATA[
		SELECT 	USERS.ID,
				USERS.EMAIL,
				USERS.AVF,
				USERS.NAME,
				USERS.PASSWORD,
				USERS.LOCKED,
				USERS.EXPIRED,
				USER_ROLES.ROLE,
				CODEMST.CODE_NM,
				USERS.EMP_NO,
        		USERS.PROFILE_IMG,
        		USERS.DEPT_CD,
        		USERS.POS_CD,
        		DP.DEPT_NM,
        		POS.POS_NM
		FROM  	USERS
		INNER JOIN
				(
		  			SELECT  USERS.ID,
		          		    @RN := @RN + 1 AS RN
		  			FROM    USERS,
		         			(SELECT @RN := 0) RC
		   			WHERE 	USERS.EMAIL  = #{email}
		   			AND    	USERS.AVF   <= CURDATE()
		   			ORDER BY
		          			AVF DESC
				) RC
		ON     USERS.ID          = RC.ID
		INNER JOIN USER_ROLES
		ON     USER_ROLES.USER_ID = USERS.ID
		INNER JOIN CODEMST
		ON     CODEMST.CODE_ID   = 1
		AND    CODEMST.CODE      = USER_ROLES.ROLE
		
		INNER JOIN DEPTS DP
		ON      DP.DEPT_CD        = USERS.DEPT_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    DEPTS
		            WHERE   DEPTS.DEPT_CD    =  DP.DEPT_CD
		            AND     DEPTS.AVF       <=  CURDATE()
		            AND     DEPTS.AVF        >  DP.AVF
		        )
		INNER JOIN POSITIONS POS
		ON      POS.POS_CD        = USERS.POS_CD
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    POSITIONS
		            WHERE   POSITIONS.POS_CD     =  POS.POS_CD
		            AND     POSITIONS.AVF       <=  CURDATE()
		            AND     POSITIONS.AVF        >  POS.AVF
		        )
		WHERE  USERS.EMAIL       = #{email}
		AND    RC.RN             = 1
	]]>	
	</select>
	
	<resultMap type="com.rugbyaholic.communityPG.auth.AuthenticatedUser" id="userDetails">
		<result property="id" column="ID" />
		<result property="email" column="EMAIL" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="avf" column="AVF" />
		<result property="username" column="NAME" />
		<result property="password" column="PASSWORD" />
		<result property="locked" column="LOCKED" />
		<result property="expired" column="EXPIRED" />
		<result property="deptCd" column="DEPT_CD"/>
		<result property="posCd" column="POS_CD"/>
		<result property="empNo" column="EMP_NO" />
		<result property="aboutMe" column="ABOUT_ME" />
		<result property="deptName" column="DEPT_NM" />
		<result property="posName" column="POS_NM" />
		<association property="profileImage" javaType="com.rugbyaholic.communityPG.common.ImageFile">
			<result property="encodedString" column="PROFILE_IMG" />
		</association>
		<collection property="roles" ofType="com.rugbyaholic.communityPG.common.Option">
			<result property="code" column="ROLE"/>
			<result property="name" column="CODE_NM" />
		</collection>
	</resultMap>
	
	<update id="changeProfile" parameterType="com.rugbyaholic.communityPG.auth.AuthenticatedUser">
	<![CDATA[
		UPDATE  USERS
		SET     NAME		 =	#{username},
				EMAIL		 =	#{email},
				PASSWORD     =  #{password},
		        PROFILE_IMG  =  #{profileImage.encodedString}
		WHERE   ID           =  #{id}
	]]>
	</update>
	
	<update id="updatePersonalInfo" parameterType="com.rugbyaholic.communityPG.auth.account.ProfileEditForm">
	<![CDATA[
		INSERT INTO PERSONAL_INFO
		(USER_ID, ABOUT_ME, ZIPCODE, PREF, CITY, BLDG, TELNO, MOBILE_NO)
		VALUES
		(#{userId}, #{aboutMe}, #{zipcode}, #{pref}, #{city}, #{bldg}, #{phoneNo}, #{mobilePhoneNo})
		ON DUPLICATE KEY UPDATE 
				ABOUT_ME	 =	#{aboutMe},
		        ZIPCODE      =  #{zipcode},
		        PREF         =  #{pref},
		        CITY         =  #{city},
		        BLDG         =  #{bldg},
		        TELNO        =  #{phoneNo},
		        MOBILE_NO    =  #{mobilePhoneNo}
	]]>
	</update>
		
	<select id="loadUserList" parameterType="com.rugbyaholic.communityPG.manage.users.UserSearchForm"
			resultMap="userDetails">
	<![CDATA[
		SELECT  U.ID,
		        U.AVF,
				U.EMAIL,
		        U.EMP_NO,
		        U.NAME,
		        U.PROFILE_IMG,
				PI.BIRTHDAY,
				coalesce(PI.ABOUT_ME, '登録されていません。') as ABOUT_ME,
		        DP.DEPT_NM,
		        POS.POS_NM,
		        ROLES.ROLE
		FROM    USERS U
		INNER JOIN DEPTS DP
		ON      DP.DEPT_CD       =  U.DEPT_CD
		AND     DP.AVF          <=  CURDATE()
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    DEPTS
		            WHERE   DEPT_CD      =  DP.DEPT_CD
		            AND     AVF         <=  CURDATE()
		            AND     AVF          >  DP.AVF
		        )
		INNER JOIN POSITIONS POS
		ON      POS.POS_CD       =  U.POS_CD
		AND     POS.AVF         <=  CURDATE()
		AND     NOT EXISTS
		        (
		            SELECT  1
		            FROM    POSITIONS
		            WHERE   POS_CD       =  POS.POS_CD
		            AND     AVF         <=  CURDATE()
		            AND     AVF          >  POS.AVF
		        )
		LEFT JOIN USER_ROLES ROLES
		ON      ROLES.USER_ID       =  U.ID
		LEFT JOIN PERSONAL_INFO PI
		ON      PI.USER_ID       =  U.ID
	]]>
	<where>
		<if test="empNo != null">
		<![CDATA[
			AND    U.EMP_NO		LIKE	CONCAT('%', #{empNo}, '%')
		]]>
		</if>
		<if test="name != null">
		<![CDATA[
			AND    U.NAME		LIKE	CONCAT('%', #{name}, '%')
		]]>
		</if>
	</where>
	<![CDATA[
		ORDER BY U.EMP_NO
		LIMIT  #{pageFrom}, #{count}
	]]>
	</select>
	
	
	
	
	
	<insert id="registerInitialUser" useGeneratedKeys="true" keyProperty="id">
	<![CDATA[
		INSERT INTO USERS (EMAIL, AVF, NAME, PASSWORD, LOCKED, EXPIRED, EMP_NO, DEPT_CD, POS_CD, PROFILE_IMG)
		VALUES (#{email}, CURDATE(), #{username}, #{password}, 0, 0, #{empNo}, '0000000', '0000', #{profileImage.encodedString})
	]]>
	</insert>
	
	<insert id="grantAuthority">
	<![CDATA[
		INSERT INTO USER_ROLES (USER_ID, ROLE, DELFLG)
		VALUES (#{user.id}, #{role}, '0')
	]]>
	</insert>
	
	<insert id="deleterUser">
	<![CDATA[
		DELETE
		         USERS
		        ,POSTS
		        ,TOPICS
		        ,POST_RATINGS
		        ,PERSONAL_INFO
		        ,USER_ROLES
		        ,USER_HOBBYS
		        ,MSG_HIST
		    FROM
		        USERS
		            LEFT JOIN POSTS
		                ON USERS.EMP_NO		= 	POSTS.CREATEDBY
		            LEFT JOIN TOPICS
		                ON USERS.EMP_NO		= 	TOPICS.CREATEDBY
		            LEFT JOIN POST_RATINGS
		                ON USERS.EMP_NO		= 	POST_RATINGS.RATEDBY
		            LEFT JOIN PERSONAL_INFO
		                ON USERS.ID 		= 	PERSONAL_INFO.USER_ID
		            LEFT JOIN USER_ROLES
		                ON USERS.ID 		= 	USER_ROLES.USER_ID
		            LEFT JOIN USER_HOBBYS
		                ON USERS.ID 		= 	USER_HOBBYS.USER_ID
		            LEFT JOIN MESSAGE_HIST MSG_HIST
		                ON USERS.ID			in 	(MSG_HIST.FROM_USER_ID, MSG_HIST.TO_USER_ID)
		    WHERE
		        USERS.ID 	= 	#{id}
  	]]>
	</insert>
	
</mapper>
