<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rugbyaholic.communityPG.comms.repositories.ChatRoomRepository">
	
	<select id="findConversationalUser" resultType="com.rugbyaholic.communityPG.websocket.ChatMessage">
	<![CDATA[
		SELECT  MSG.FROM_USER_ID       AS fromUserId,
		        FROM_USER.NAME		   AS fromUser,
		        LEFT(MSG.MESSAGE, 20)  AS content,
		        MSG.MESSAGE_IMG        AS messageImg,
		        MSG.SENT_AVF	       AS sentAvf,
		        MSG.TO_USER_ID         AS toUserId,
		        TO_USER.NAME		   AS toUser
		FROM    MESSAGE_HIST MSG
		LEFT JOIN USERS FROM_USER
		ON      FROM_USER.ID         =  MSG.FROM_USER_ID
		AND     EXISTS 
		        ( 
 		            SELECT  NAME, AVF 
 		            FROM    USERS 
 		            WHERE   AVF     <=  CURDATE() 
 		            AND     AVF      >  FROM_USER.AVF 
 		        ) 
		LEFT JOIN USERS TO_USER
		ON      TO_USER.ID         =  MSG.TO_USER_ID
		AND     EXISTS 
		        ( 
 		            SELECT  NAME 
 		            FROM    USERS 
 		            WHERE   AVF     <=  CURDATE() 
 		        ) 
		WHERE   MSG.FROM_USER_ID	 =	#{userId}
		AND	    MSG.SENT_AVF		>=	FROM_USER.AVF
		AND		MSG.SENT_AVF 		IN  (
										SELECT 	MAX(SENT_AVF) 
										FROM 	MESSAGE_HIST 
										GROUP BY TO_USER_ID
									)
		ORDER BY 	MSG.SENT_AVF 	DESC
	]]>
	</select>

	<select id="findMessages" resultType="com.rugbyaholic.communityPG.websocket.ChatMessage">
	<![CDATA[
		SELECT  MSG.FROM_USER_ID       AS fromUserId,
		        FROM_USER.NAME		   AS fromUser,
		        MSG.MESSAGE            AS content,
		        MSG.MESSAGE_IMG        AS messageImg,
		        MSG.SENT_AVF           AS sentAvf,
		        MSG.TO_USER_ID         AS toUserId,
		        TO_USER.NAME           AS toUser
		FROM    MESSAGE_HIST MSG
		LEFT JOIN USERS FROM_USER
		ON      FROM_USER.ID         =  MSG.FROM_USER_ID
		AND     EXISTS 
		        ( 
 		            SELECT  NAME, AVF 
 		            FROM    USERS 
 		            WHERE   AVF     <=  CURDATE() 
 		            AND     AVF      >  FROM_USER.AVF 
 		        ) 
		LEFT JOIN USERS TO_USER
		ON      TO_USER.ID         =  MSG.TO_USER_ID
		AND     EXISTS 
		        ( 
 		            SELECT  NAME 
 		            FROM    USERS 
 		            WHERE   AVF     <=  CURDATE() 
 		        ) 
		WHERE   MSG.SENT_AVF		>=	FROM_USER.AVF
		AND     (
				 MSG.FROM_USER_ID   =  #{fromUserId}	AND 
				 MSG.TO_USER_ID     =  #{toUserId}
				)
		OR      (
				 MSG.FROM_USER_ID   =  #{toUserId} 		AND
				 MSG.TO_USER_ID     =  #{fromUserId}
				)
		ORDER BY
		        MSG.SENT_AVF
	]]>
	</select>

	<insert id="registerMessage">
	<![CDATA[
		INSERT INTO MESSAGE_HIST(
		    FROM_USER_ID,
		    MESSAGE,
		    MESSAGE_IMG,
		    SENT_AVF,
		    TO_USER_ID
		) VALUES (
		    #{msgInfo.fromUserId},
		    #{msgInfo.content},
		    #{msgInfo.messageImg},
		    #{msgInfo.sentAvf},
		    #{msgInfo.toUserId}
		)
	]]>
	</insert>
	
	<insert id="deleterMessageHist">
	<![CDATA[
		DELETE 
		FROM    MESSAGE_HIST MSG
		WHERE   FROM_USER_ID	 = 		#{msgInfo.fromUserId},
		AND	    SENT_AVF		 = 		#{msgInfo.sentAvf},
		AND	    TO_USER_ID 		 = 		#{msgInfo.toUserId},
		AND		MSG.SENT_AVF   >= (
		 		    SELECT  AVF 
 		            FROM    USERS U
 		            WHERE   AVF     <=  CURDATE() 
 		            AND     AVF      >  U.AVF 
 		            AND 	U.ID     =  MSG.FROM_USER_ID
				)
	]]>
	</insert>
	
	<insert id="closerChatRoom">
	<![CDATA[
		DELETE 
		FROM    MESSAGE_HIST MSG
		WHERE   (
				 FROM_USER_ID   =  #{fromUserId}	AND 
				 TO_USER_ID     =  #{toUserId}
				)
		OR      (
				 FROM_USER_ID   =  #{toUserId} 		AND
				 TO_USER_ID     =  #{fromUserId}
				)
		AND		MSG.SENT_AVF   >= (
		 		    SELECT  AVF 
 		            FROM    USERS U
 		            WHERE   AVF     <=  CURDATE() 
 		            AND     AVF      >  U.AVF 
 		            AND 	U.ID     =  MSG.FROM_USER_ID
				)
	]]>
	</insert>
	
</mapper>